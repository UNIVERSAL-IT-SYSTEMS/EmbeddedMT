Import('env')

source_files = [
	'check.c',
	'check_error.c',
	'check_list.c',
	'check_log.c',
	'check_msg.c',
	'check_pack.c',
	'check_print.c',
	'check_run.c',
	'check_str.c'
]

header_files = [
	'check.h',
	'check_error.h',
	'check_impl.h',
	'check_list.h',
	'check_log.h',
	'check_msg.h',
	'check_pack.h',
	'check_print.h',
	'check_str.h',
	'../check_stdint.h'
]

env_check = env.Clone()
env_check['CPPPATH'].append('..')
absDir = Dir('.').abspath
env_check['CFLAGS'].append('-isystem{dir}'.format(dir=absDir))
env_check['CPPDEFINES'].append('HAVE_CONFIG_H')

# Build and install lib
# Install header files
env.Install('{includeDir}'.format(includeDir=env['THIRD_PARTY_INCLUDE_DIR']), header_files)

lib = env_check.Library('check', source_files)
installed_lib = env_check.Install("{libs_dir}".format(libs_dir=env['LIBS_DIR']), lib)
env_check.Alias('buildcheck', installed_lib)
env_check.Alias('build3rdparty', installed_lib)
