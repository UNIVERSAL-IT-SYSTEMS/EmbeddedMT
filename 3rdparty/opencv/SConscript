import os
Import('env')

# Target specific settings
if env['BUILD_TARGET'] == 'native':
    env['opencv_config'] = {
	'BUILD_JPEG' : True,
	'BUILD_ZLIB' : True,
	'ENABLE_SSE' : True,
        'ENABLE_SSE2' : True,
        'ENABLE_SSE3' : True,
	'WITH_FFMPEG' : True,
	'WITH_GTK' : True,
	'WITH_JPEG' : True,
	'WITH_LIBV4L' : True,
	'WITH_V4L' : True
    }
    env['OPENCVBUILDER_INCLUDE_PATHS'] = [
	'/usr/include',
	'/usr/lib',
    ]
elif env['BUILD_TARGET'] == 'macosx':
    env['opencv_config'] = {
	'BUILD_JPEG' : True,
	'BUILD_ZLIB' : True,
	'ENABLE_SSE' : True,
        'ENABLE_SSE2' : True,
        'ENABLE_SSE3' : True,
	'WITH_COCOA' : True,
	'WITH_FFMPEG' : True,
	'WITH_JPEG' : True,
	'WITH_QTKIT' : True
    }
    env['OPENCVBUILDER_INCLUDE_PATHS'] = [
	'/usr/include',
	'/usr/lib',
    	# Enable macports support
	'opt/local/include',
	'opt/local/lib',
    ]
else:
    env['opencv_config'] = {
    }
    env['OPENCVBUILDER_INCLUDE_PATHS'] = [
	'/usr/include',
	'/usr/lib',
    ]

opencv_module_dir = '{opencv_dir}/opencv/modules'.format(opencv_dir = env['openCV_DIR'])
opencv_3rdparty_dir = '{opencv_dir}/opencv/3rdparty'.format(opencv_dir = env['openCV_DIR'])
env.configOpencv()

for entry in os.listdir(opencv_3rdparty_dir):
	if(os.path.isdir('{module_dir}/{module}'.format(module_dir = opencv_3rdparty_dir, module = entry))):
		# Generate module lib
		env['opencv_3rdparty'] = Dir('{module_dir}/{module}'.format(module_dir = opencv_3rdparty_dir, module = entry)).abspath
		env.thirdpartyOpencv()

for entry in os.listdir(opencv_module_dir):
	if(os.path.isdir('{module_dir}/{module}'.format(module_dir = opencv_module_dir, module = entry))):
		# Generate module lib
		env['opencv_module'] = Dir('{module_dir}/{module}'.format(module_dir = opencv_module_dir, module = entry)).abspath
		env.openclOpencv()
		env.buildOpencv()

env['LINKFLAGS'] = env['OPENCVBUILDER_ADDITIONAL_FLAGS']
