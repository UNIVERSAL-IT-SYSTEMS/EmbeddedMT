Import('env')

folders = [
    'application/SConscript',
	'cm/SConscript',
    'descriptor/SConscript',
    'displacement/SConscript',
    'draw/SConscript',
    'imProc/SConscript',
    'match/SConscript',
    'log/SConscript',
    'inputMethod/SConscript',
    'outputMethod/SConscript',
	'detector/SConscript'
]

SConscript(folders)

libs = [
    # Modules
    'inputMethod',
    'findTheBall',
    'descriptor',
	'detector',
    'displacementBase',
    'draw',
    'imProc',
    'matcher',
	'utils',
	'outputMethod',

    # openCV libraries
    'opencv_photo',
    'opencv_nonfree',
    'opencv_highgui',
	'opencv_videoio',
    'opencv_flann',
    'opencv_features2d',
	'opencv_imgcodecs',
    'opencv_imgproc',
    'opencv_core',
]

libs.extend(env['OPENCVBUILDER_ADDITIONAL_LIBRARIES'])
libs.extend(env['STD_LIBS'])

libs_path = [
    env['LIBS_DIR'],
    env['THIRD_PARTY_LIBS_DIR'],
    # TODO: fix ugly macport fix
    '/opt/local/lib',
]

target = env.Program('proofOfConcept.cpp', LIBS=libs, LIBPATH=libs_path)
installed_bin = env.Install("{bin_dir}".format(bin_dir=env['BIN_DIR']), target)
bin = env.Alias("demo", installed_bin)

target = env.Program('pipeline.cpp', LIBS=libs, LIBPATH=libs_path)
installed_bin = env.Install("{bin_dir}".format(bin_dir=env['BIN_DIR']), target)
bin = env.Alias("pipeline", installed_bin)
